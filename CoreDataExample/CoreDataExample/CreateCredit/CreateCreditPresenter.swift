//
//  CreateCreditPresenter.swift
//  CoreDataExample
//
//  Created nguyen gia huy on 21/10/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import Foundation
import UIKit
import CoreData
// MARK: View -
protocol CreateCreditViewProtocol: class {
    func createSuccess(credit: [Credits])
    func createError()
}

// MARK: Presenter -
protocol CreateCreditPresenterProtocol: class {
	var viewCreateCredit: CreateCreditViewProtocol? { get set }
    func createCredit(user:Users,numberCredit: String)
    func fetchCredit(keyCredit: Users)
    func checkDuplication(credit: String) -> Bool
}

class CreateCreditPresenter: CreateCreditPresenterProtocol {
    weak var viewCreateCredit: CreateCreditViewProtocol?
    let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
    var dataCredit: [Credits]?
    func fetchCredit(keyCredit: Users){
        do {
            dataCredit = try self.context.fetch(Credits.fetchRequestCreditsByKey(key: keyCredit))
            self.viewCreateCredit?.createSuccess(credit: dataCredit!)
            
        }
        catch let error{
           print(error)
        }
    }
    func checkDuplication(credit: String) -> Bool {
        var stateCredit = false
        do {
            dataCredit = try self.context.fetch(Credits.fetchRequestCredits())
        }
        catch let error{
           print(error)
        }
        if let data = dataCredit as [Credits]? {
            for index in data {
                if credit == index.number! {
                    stateCredit = true
                    break
                }
                else {
                    stateCredit = false
                }
            }
        }
        return stateCredit
    }
    func createCredit(user: Users,numberCredit: String){
        let newCredit = Credits(context: self.context)
        newCredit.number = numberCredit
        user.addToCreditCard(newCredit)
            do {
                try self.context.save()
            }
            catch{
                print(error.localizedDescription)
            }
    }
    

}
