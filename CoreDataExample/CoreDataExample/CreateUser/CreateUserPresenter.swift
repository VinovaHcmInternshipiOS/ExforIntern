//
//  CreateUserPresenter.swift
//  CoreDataExample
//
//  Created nguyen gia huy on 19/10/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import Foundation
import CoreData
import UIKit
// MARK: View -
protocol CreateUserViewProtocol: class {
    func createSuccess(user: [Users])
    func createError()
}

// MARK: Presenter -
protocol CreateUserPresenterProtocol: class {
	var viewCreateUser: CreateUserViewProtocol? { get set }
    func createUser(name: String)
    func fetchUser()
    func checkDuplication(name: String) -> Bool

}
class CreateUserPresenter: CreateUserPresenterProtocol {
    weak var viewCreateUser: CreateUserViewProtocol?
    let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
    var dataUser: [Users]?
    func fetchUser() {
        do {
            dataUser = try self.context.fetch(Users.fetchRequestUsers())
            viewCreateUser?.createSuccess(user: dataUser!)
        }
        catch let error{
           print(error)
        }
    }
    func checkDuplication(name: String) -> Bool {
        var stateName = false
        do {
            dataUser = try self.context.fetch(Users.fetchRequestUsers())
        }
        catch let error{
           print(error)
        }
        if let data = dataUser as [Users]? {
            for index in data {
                if name == index.name! {
                    stateName = true
                    break
                }
                else {
                    stateName = false
                }
            }
        }
        return stateName
    }
    func createUser(name: String) {
        
        
        let newUser = Users(context: self.context)
        newUser.name = name

            do {
                try self.context.save()
            }
            catch let error{
                print(error.localizedDescription)
            }
        
        

    }
    

    
}
